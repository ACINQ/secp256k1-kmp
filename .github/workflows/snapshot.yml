name: Publish snapshot

on:
  push:
    branches:
      - 'master'
      - 'snapshot/*'
    paths-ignore:
      - '**.md'
      - '**.adoc'
      - '**/.gitignore'
      - '.github/**'
      - '!.github/workflows/snapshot.yml'

jobs:

  upload:
    name: Upload
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]
    steps:
      - name: Check out
        uses: actions/checkout@v2
        with:
          submodules: 'true'
      - name: Cached Konan
        uses: actions/cache@v2
        with:
          path: ~/.konan
          key: ${{ runner.os }}-konan-${{ hashFiles('**/*.gradle*') }}-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-konan-
      - name: Cached Gradle
        uses: actions/cache@v2
        with:
          path: ~/.gradle
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-
      - name: Android environment
        shell: bash
        run: |
          echo "ANDROID_HOME=$ANDROID_HOME" >> $GITHUB_ENV
          echo "ANDROID_NDK_VERSION=21.3.6528147" >> $GITHUB_ENV
      - name: Cached Android NDK
        uses: actions/cache@v2
        with:
          path: ${{ format('{0}/ndk/{1}', env.ANDROID_HOME, env.ANDROID_NDK_VERSION) }}
          key: ${{ runner.os }}-android-ndk-${{ env.ANDROID_NDK_VERSION }}
      - name: Set up shell
        if: matrix.os == 'windows-latest'
        run: |
          echo "C:\msys64\usr\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          rm.exe "C:/WINDOWS/system32/bash.EXE"
      - name: Set up JDK 8
        uses: actions/setup-java@v1
        with:
          java-version: 8
      - name: Setup Android
        if: matrix.os != 'windows-latest'
        shell: bash
        run: |
          $ANDROID_HOME/tools/bin/sdkmanager "ndk;$ANDROID_NDK_VERSION"
      - name: Setup Android
        if: matrix.os == 'windows-latest'
        shell: bash
        run: |
          $ANDROID_HOME\\tools\\bin\\sdkmanager.bat "ndk;$ANDROID_NDK_VERSION"
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Install Automake
        if: matrix.os == 'macOS-latest'
        run: brew install automake
      - name: Check JVM
        shell: bash
        run: ./gradlew jvmTest
      - name: Check Linux
        if: matrix.os == 'ubuntu-latest'
        shell: bash
        run: ./gradlew linuxTest
      - name: Check iOS
        if: matrix.os == 'macOS-latest'
        shell: bash
        run: ./gradlew iosX64Test
      - name: Check Android
        if: matrix.os == 'macOS-latest'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          ndk: ${{ env.ANDROID_NDK_VERSION }}
          cmake: 3.10.2.4988404
          script: ./gradlew connectedCheck
      - name: Publish Linux
        if: matrix.os == 'ubuntu-latest'
        env:
          BINTRAY_USER: ${{ secrets.bintray_user }}
          BINTRAY_APIKEY: ${{ secrets.bintray_apikey }}
        shell: bash
#          ./gradlew publishLinuxPublicationToBintrayRepository :jni:jvm:linux:publishJvmPublicationToBintrayRepository -PsnapshotNumber=${{ github.run_number }} -PgitRef=${{ github.ref }}
        run: ./gradlew publishLinuxPublicationToMavenLocal :jni:jvm:linux:publishJvmPublicationToMavenLocal -PsnapshotNumber=${{ github.run_number }} -PgitRef=${{ github.ref }}
      - name: Publish Windows
        if: matrix.os == 'windows-latest'
        env:
          BINTRAY_USER: ${{ secrets.bintray_user }}
          BINTRAY_APIKEY: ${{ secrets.bintray_apikey }}
        shell: bash
#          ./gradlew :jni:jvm:mingw:publishJvmPublicationToBintrayRepository -PsnapshotNumber=${{ github.run_number }} -PgitRef=${{ github.ref }}
        run: ./gradlew :jni:jvm:mingw:publishToMavenLocal -PsnapshotNumber=${{ github.run_number }} -PgitRef=${{ github.ref }}
      - name: Publish MacOS
        if: matrix.os == 'macOS-latest'
        env:
          BINTRAY_USER: ${{ secrets.bintray_user }}
          BINTRAY_APIKEY: ${{ secrets.bintray_apikey }}
        shell: bash
#          ./gradlew publish -PsnapshotNumber=${{ github.run_number }} -PgitRef=${{ github.ref }}
        run: ./gradlew publishToMavenLocal -PsnapshotNumber=${{ github.run_number }} -PgitRef=${{ github.ref }}
      - name: Copy artifact files
        run: |
          mkdir -p maven-local/snapshot
          cp -r ~/.m2/repository/* maven-local/snapshot
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: snapshot
          path: |
            maven-local
            !maven-local/**/maven-metadata-local.xml
#      - name: Discard
#        if: ${{ failure() || cancelled() }}
#        env:
#          BINTRAY_USER: ${{ secrets.bintray_user }}
#          BINTRAY_APIKEY: ${{ secrets.bintray_apikey }}
#        run: ./gradlew postBintrayDiscard -PsnapshotNumber=${{ github.run_number }} -PgitRef=${{ github.ref }}

#  publish:
#    name: Publish
#    needs: upload
#    runs-on: ubuntu-latest
#    steps:
#      - name: Check out
#        uses: actions/checkout@v2
#        with:
#          submodules: 'true'
#      - name: Cached Gradle
#        uses: actions/cache@v2
#        with:
#          path: ~/.gradle
#          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}
#          restore-keys: ${{ runner.os }}-gradle-
#      - name: Set up JDK 11
#        uses: actions/setup-java@v1
#        with:
#          java-version: 11
#      - name: Publish
#        env:
#          BINTRAY_USER: ${{ secrets.bintray_user }}
#          BINTRAY_APIKEY: ${{ secrets.bintray_apikey }}
#        run: ./gradlew postBintrayPublish -PsnapshotNumber=${{ github.run_number }} -PgitRef=${{ github.ref }}